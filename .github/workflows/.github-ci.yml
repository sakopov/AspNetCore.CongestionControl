name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest    

    steps:
    - name: Setup .NET on CI runner
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301

  build:
    needs: prepare
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Restore
      run: dotnet restore

    - name: Build
      run: dotnet build -c Release --no-restore

    - name: Unit Test
      env:
        PROJECT_PATH: "./test/AspNetCore.CongestionControl.UnitTests/AspNetCore.CongestionControl.UnitTests.csproj"
      run: dotnet test $PROJECT_PATH -c Release --no-build

    - name: Start Redis
      uses: supercharge/redis-github-action@1.2.0

    - name: Integration Test
      env:
        PROJECT_PATH: "./test/AspNetCore.CongestionControl.IntegrationTests/AspNetCore.CongestionControl.IntegrationTests.csproj"
      run: dotnet test $PROJECT_PATH -c Release --no-build

    - name: Version
      id: version
      uses: hennejg/github-tag-action@v4.2.4
      with:
        release_branches: master
        github_token: ${{ secrets.GITHUB_TOKEN }}
        dry_run: "true"

    - name: Package
      env:
        PROJECT_PATH: "./src/AspNetCore.CongestionControl/AspNetCore.CongestionControl.csproj"
      run: dotnet pack -v normal -c Release --no-restore --include-symbols --include-source -p:PackageVersion=${{ steps.version.outputs.new_version }} $PROJECT_PATH
    
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: nupkg
        path: ./src/AspNetCore.CongestionControl/bin/Release/*.nupkg
  
  publish:
    needs: build
    name: Publish
    runs-on: ubuntu-latest

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v1
        with:
          name: nupkg

      - name: Push to GitHub Feed
        run: |
          for f in ./nupkg/*.nupkg
          do
            curl -vX PUT -u "$GITHUB_USER:$GITHUB_TOKEN" -F package=@$f $GITHUB_FEED
          done

      - name: Push to NuGet Feed
        run: dotnet nuget push ./nupkg/*.nupkg --source $NUGET_FEED --skip-duplicate --api-key $NUGET_KEY
